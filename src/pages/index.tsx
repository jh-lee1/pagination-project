import { Pagination } from '@/types/pagination';
import { PostResponseDto } from '@/types/post/dto/responseDto';
import styled from '@emotion/styled';
import { GetServerSideProps } from 'next';
import Head from 'next/head';
import { CustomError } from './api/post';
import { Post } from '@/Layout/Post/Post';

export default function Home(props: Pagination<PostResponseDto[]> | CustomError) {
  if ('message' in props) return <>서버에서 에러가 발생했습니다... error= {props.message} </>;
  if (!props) return <>loading...</>;

  return (
    <>
      <Head>
        <title>Pagination Test</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <Post data={props} />
      </Main>
    </>
  );
}
const Main = styled.main`
  max-width: 1080px;
  margin: 0px auto;
  padding-top: 12px;
`;

export const getServerSideProps: GetServerSideProps = async context => {
  const page = context.query?.page || 1;
  const limitPath = `&limit=${10}`;
  const filterPath = context.query?.filter ? `&filter=${context.query.filter}` : '';
  const valuePath = context.query?.value ? `&value=${context.query.value}` : '';
  console.log(context);

  const url = `http:/localhost:3000/api/post?page=${page}${limitPath}${filterPath}${valuePath}`;

  const getData = await fetch(url, { method: 'GET' });
  const data = await getData.json();

  return {
    props: data
  };
};
